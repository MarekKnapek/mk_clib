#ifndef mk_include_guard_mk_lib_crypto_hash_block_streebog_256
#define mk_include_guard_mk_lib_crypto_hash_block_streebog_256


/* http://tc26.ru/research/polozhenie/GOST_R_34_11-2012_eng.pdf */


#include "mk_lang_constexpr.h"
#include "mk_lang_jumbo.h"
#include "mk_lang_noexcept.h"
#include "mk_lang_stringify.h"
#include "mk_lang_types.h"
#include "mk_lib_crypto_hash_block_streebog_base.h"


#define mk_lib_crypto_hash_block_streebog_256_block_len 64
#define mk_lib_crypto_hash_block_streebog_256_digest_len 32
#define mk_lib_crypto_hash_block_streebog_256_name_def Streebog-256
mk_lang_constexpr_static_inline mk_lang_types_pchar_t const mk_lib_crypto_hash_block_streebog_256_name_str[] = mk_lang_stringify(mk_lib_crypto_hash_block_streebog_256_name_def);
mk_lang_constexpr_static_inline mk_lang_types_sint_t const mk_lib_crypto_hash_block_streebog_256_name_str_len = ((mk_lang_types_sint_t)(sizeof(mk_lib_crypto_hash_block_streebog_256_name_str) - 1));


struct mk_lib_crypto_hash_block_streebog_256_s
{
	mk_lib_crypto_hash_block_streebog_base_t m_base;
};
typedef struct mk_lib_crypto_hash_block_streebog_256_s mk_lib_crypto_hash_block_streebog_256_t;
typedef mk_lib_crypto_hash_block_streebog_256_t const mk_lib_crypto_hash_block_streebog_256_ct;
typedef mk_lib_crypto_hash_block_streebog_256_t* mk_lib_crypto_hash_block_streebog_256_pt;
typedef mk_lib_crypto_hash_block_streebog_256_t const* mk_lib_crypto_hash_block_streebog_256_pct;

typedef mk_lib_crypto_hash_block_streebog_base_aligned64a_t mk_lib_crypto_hash_block_streebog_256_block_t;
typedef mk_lib_crypto_hash_block_streebog_256_block_t const mk_lib_crypto_hash_block_streebog_256_block_ct;
typedef mk_lib_crypto_hash_block_streebog_256_block_t* mk_lib_crypto_hash_block_streebog_256_block_pt;
typedef mk_lib_crypto_hash_block_streebog_256_block_t const* mk_lib_crypto_hash_block_streebog_256_block_pct;

typedef mk_lib_crypto_hash_block_streebog_base_aligned32_t mk_lib_crypto_hash_block_streebog_256_digest_t;
typedef mk_lib_crypto_hash_block_streebog_256_digest_t const mk_lib_crypto_hash_block_streebog_256_digest_ct;
typedef mk_lib_crypto_hash_block_streebog_256_digest_t* mk_lib_crypto_hash_block_streebog_256_digest_pt;
typedef mk_lib_crypto_hash_block_streebog_256_digest_t const* mk_lib_crypto_hash_block_streebog_256_digest_pct;

mk_lang_constexpr mk_lang_jumbo mk_lang_types_void_t mk_lib_crypto_hash_block_streebog_256_init(mk_lib_crypto_hash_block_streebog_256_pt const streebog_256) mk_lang_noexcept;
mk_lang_constexpr mk_lang_jumbo mk_lang_types_void_t mk_lib_crypto_hash_block_streebog_256_append_blocks(mk_lib_crypto_hash_block_streebog_256_pt const streebog_256, mk_lib_crypto_hash_block_streebog_256_block_pct const pblocks, mk_lang_types_usize_t const nblocks) mk_lang_noexcept;
mk_lang_constexpr mk_lang_jumbo mk_lang_types_void_t mk_lib_crypto_hash_block_streebog_256_finish(mk_lib_crypto_hash_block_streebog_256_pt const streebog_256, mk_lib_crypto_hash_block_streebog_256_block_pt const block, mk_lang_types_sint_t const idx, mk_lib_crypto_hash_block_streebog_256_digest_pt const digest) mk_lang_noexcept;


#if mk_lang_jumbo_want == 1
#include "mk_lib_crypto_hash_block_streebog_256.c"
#endif
#endif
