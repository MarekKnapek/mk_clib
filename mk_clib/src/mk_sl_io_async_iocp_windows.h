#ifndef mk_include_guard_mk_sl_io_async_iocp_windows
#define mk_include_guard_mk_sl_io_async_iocp_windows


#include "mk_lang_jumbo.h"
#include "mk_lang_nodiscard.h"
#include "mk_lang_noexcept.h"
#include "mk_lang_types.h"
#include "mk_win_base.h"
#include "mk_win_kernel_iocp.h"


struct mk_sl_io_async_reader_file_windows_s;
typedef struct mk_sl_io_async_reader_file_windows_s mk_sl_io_async_reader_file_windows_t;
typedef mk_sl_io_async_reader_file_windows_t const mk_sl_io_async_reader_file_windows_ct;
typedef mk_sl_io_async_reader_file_windows_t* mk_sl_io_async_reader_file_windows_pt;
typedef mk_sl_io_async_reader_file_windows_t const* mk_sl_io_async_reader_file_windows_pct;

struct mk_sl_io_async_reader_file_iorp_windows_s;
typedef struct mk_sl_io_async_reader_file_iorp_windows_s mk_sl_io_async_reader_file_iorp_windows_t;
typedef mk_sl_io_async_reader_file_iorp_windows_t const mk_sl_io_async_reader_file_iorp_windows_ct;
typedef mk_sl_io_async_reader_file_iorp_windows_t* mk_sl_io_async_reader_file_iorp_windows_pt;
typedef mk_sl_io_async_reader_file_iorp_windows_t const* mk_sl_io_async_reader_file_iorp_windows_pct;

struct mk_sl_io_async_writer_file_windows_s;
typedef struct mk_sl_io_async_writer_file_windows_s mk_sl_io_async_writer_file_windows_t;
typedef mk_sl_io_async_writer_file_windows_t const mk_sl_io_async_writer_file_windows_ct;
typedef mk_sl_io_async_writer_file_windows_t* mk_sl_io_async_writer_file_windows_pt;
typedef mk_sl_io_async_writer_file_windows_t const* mk_sl_io_async_writer_file_windows_pct;

struct mk_sl_io_async_writer_file_iorp_windows_s;
typedef struct mk_sl_io_async_writer_file_iorp_windows_s mk_sl_io_async_writer_file_iorp_windows_t;
typedef mk_sl_io_async_writer_file_iorp_windows_t const mk_sl_io_async_writer_file_iorp_windows_ct;
typedef mk_sl_io_async_writer_file_iorp_windows_t* mk_sl_io_async_writer_file_iorp_windows_pt;
typedef mk_sl_io_async_writer_file_iorp_windows_t const* mk_sl_io_async_writer_file_iorp_windows_pct;


struct mk_sl_io_async_iocp_windows_s
{
	mk_win_base_handle_t m_iocp;
};
typedef struct mk_sl_io_async_iocp_windows_s mk_sl_io_async_iocp_windows_t;
typedef mk_sl_io_async_iocp_windows_t const mk_sl_io_async_iocp_windows_ct;
typedef mk_sl_io_async_iocp_windows_t* mk_sl_io_async_iocp_windows_pt;
typedef mk_sl_io_async_iocp_windows_t const* mk_sl_io_async_iocp_windows_pct;

struct mk_sl_io_async_iocp_iorp_windows_s
{
	mk_win_base_bool_t m_b;
	mk_win_base_dword_t m_transfered;
	mk_win_base_usize_t m_key;
	mk_win_kernel_files_overlapped_lpt m_iorp;
};
typedef struct mk_sl_io_async_iocp_iorp_windows_s mk_sl_io_async_iocp_iorp_windows_t;
typedef mk_sl_io_async_iocp_iorp_windows_t const mk_sl_io_async_iocp_iorp_windows_ct;
typedef mk_sl_io_async_iocp_iorp_windows_t* mk_sl_io_async_iocp_iorp_windows_pt;
typedef mk_sl_io_async_iocp_iorp_windows_t const* mk_sl_io_async_iocp_iorp_windows_pct;


mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_windows_construct(mk_sl_io_async_iocp_windows_pt const iocp, mk_lang_types_sint_t const concurrency) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_windows_associate_r(mk_sl_io_async_iocp_windows_pt const iocp, mk_sl_io_async_reader_file_windows_pt const reader, mk_lang_types_usize_t const key) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_windows_associate_w(mk_sl_io_async_iocp_windows_pt const iocp, mk_sl_io_async_writer_file_windows_pt const writer, mk_lang_types_usize_t const key) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_windows_peek(mk_sl_io_async_iocp_windows_pt const iocp, mk_sl_io_async_iocp_iorp_windows_pt const iorp) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_windows_wait(mk_sl_io_async_iocp_windows_pt const iocp, mk_sl_io_async_iocp_iorp_windows_pt const iorp) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_windows_destroy(mk_sl_io_async_iocp_windows_pt const iocp) mk_lang_noexcept;

mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_iorp_windows_has(mk_sl_io_async_iocp_iorp_windows_pt const iorp, mk_lang_types_bool_pt const has) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_iorp_windows_failed(mk_sl_io_async_iocp_iorp_windows_pt const iorp, mk_lang_types_bool_pt const failed) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_iorp_windows_key(mk_sl_io_async_iocp_iorp_windows_pt const iorp, mk_lang_types_usize_pt const key) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_iorp_windows_transfered(mk_sl_io_async_iocp_iorp_windows_pt const iorp, mk_lang_types_usize_pt const transfered) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_iorp_windows_r(mk_sl_io_async_iocp_iorp_windows_pt const iorp, mk_sl_io_async_reader_file_iorp_windows_pt* const r) mk_lang_noexcept;
mk_lang_nodiscard mk_lang_jumbo mk_lang_types_sint_t mk_sl_io_async_iocp_iorp_windows_w(mk_sl_io_async_iocp_iorp_windows_pt const iorp, mk_sl_io_async_writer_file_iorp_windows_pt* const w) mk_lang_noexcept;


#if mk_lang_jumbo_want == 1
#include "mk_sl_io_async_iocp_windows.c"
#endif
#endif
