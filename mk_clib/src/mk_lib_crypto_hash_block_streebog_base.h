#ifndef mk_include_guard_mk_lib_crypto_hash_block_streebog_base
#define mk_include_guard_mk_lib_crypto_hash_block_streebog_base


/* http://tc26.ru/research/polozhenie/GOST_R_34_11-2012_eng.pdf */


#include "mk_lang_alignas.h"
#include "mk_lang_constexpr.h"
#include "mk_lang_jumbo.h"
#include "mk_lang_noexcept.h"
#include "mk_lang_stringify.h"
#include "mk_lang_types.h"
#include "mk_sl_uint64.h"
#include "mk_sl_uint8.h"


#define mk_lib_crypto_hash_block_streebog_base_block_len 64


union mk_lib_crypto_hash_block_streebog_base_aligned32_u
{
	mk_lang_alignas(32) mk_sl_cui_uint8_t m_uint8s[32];
	mk_lang_types_ulllong_t m_ulllong;
};
typedef union mk_lib_crypto_hash_block_streebog_base_aligned32_u mk_lib_crypto_hash_block_streebog_base_aligned32_t;
typedef mk_lib_crypto_hash_block_streebog_base_aligned32_t const mk_lib_crypto_hash_block_streebog_base_aligned32_ct;
typedef mk_lib_crypto_hash_block_streebog_base_aligned32_t* mk_lib_crypto_hash_block_streebog_base_aligned32_pt;
typedef mk_lib_crypto_hash_block_streebog_base_aligned32_t const* mk_lib_crypto_hash_block_streebog_base_aligned32_pct;

union mk_lib_crypto_hash_block_streebog_base_aligned64a_u
{
	mk_lang_alignas(64) mk_sl_cui_uint8_t m_uint8s[64];
	mk_lang_types_ulllong_t m_ulllong;
};
typedef union mk_lib_crypto_hash_block_streebog_base_aligned64a_u mk_lib_crypto_hash_block_streebog_base_aligned64a_t;
typedef mk_lib_crypto_hash_block_streebog_base_aligned64a_t const mk_lib_crypto_hash_block_streebog_base_aligned64a_ct;
typedef mk_lib_crypto_hash_block_streebog_base_aligned64a_t* mk_lib_crypto_hash_block_streebog_base_aligned64a_pt;
typedef mk_lib_crypto_hash_block_streebog_base_aligned64a_t const* mk_lib_crypto_hash_block_streebog_base_aligned64a_pct;

union mk_lib_crypto_hash_block_streebog_base_aligned64b_u
{
	mk_lang_alignas(64) mk_sl_cui_uint64_t m_uint64s[8];
	mk_lang_types_ulllong_t m_ulllong;
};
typedef union mk_lib_crypto_hash_block_streebog_base_aligned64b_u mk_lib_crypto_hash_block_streebog_base_aligned64b_t;
typedef mk_lib_crypto_hash_block_streebog_base_aligned64b_t const mk_lib_crypto_hash_block_streebog_base_aligned64b_ct;
typedef mk_lib_crypto_hash_block_streebog_base_aligned64b_t* mk_lib_crypto_hash_block_streebog_base_aligned64b_pt;
typedef mk_lib_crypto_hash_block_streebog_base_aligned64b_t const* mk_lib_crypto_hash_block_streebog_base_aligned64b_pct;


struct mk_lib_crypto_hash_block_streebog_base_s
{
	mk_lib_crypto_hash_block_streebog_base_aligned64b_t m_h;
	mk_lib_crypto_hash_block_streebog_base_aligned64b_t m_n;
	mk_lib_crypto_hash_block_streebog_base_aligned64b_t m_s;
};
typedef struct mk_lib_crypto_hash_block_streebog_base_s mk_lib_crypto_hash_block_streebog_base_t;
typedef mk_lib_crypto_hash_block_streebog_base_t const mk_lib_crypto_hash_block_streebog_base_ct;
typedef mk_lib_crypto_hash_block_streebog_base_t* mk_lib_crypto_hash_block_streebog_base_pt;
typedef mk_lib_crypto_hash_block_streebog_base_t const* mk_lib_crypto_hash_block_streebog_base_pct;

typedef mk_lib_crypto_hash_block_streebog_base_aligned64a_t mk_lib_crypto_hash_block_streebog_base_block_t;
typedef mk_lib_crypto_hash_block_streebog_base_block_t const mk_lib_crypto_hash_block_streebog_base_block_ct;
typedef mk_lib_crypto_hash_block_streebog_base_block_t* mk_lib_crypto_hash_block_streebog_base_block_pt;
typedef mk_lib_crypto_hash_block_streebog_base_block_t const* mk_lib_crypto_hash_block_streebog_base_block_pct;

typedef mk_lib_crypto_hash_block_streebog_base_aligned64b_t mk_lib_crypto_hash_block_streebog_base_block2_t;
typedef mk_lib_crypto_hash_block_streebog_base_block2_t const mk_lib_crypto_hash_block_streebog_base_block2_ct;
typedef mk_lib_crypto_hash_block_streebog_base_block2_t* mk_lib_crypto_hash_block_streebog_base_block2_pt;
typedef mk_lib_crypto_hash_block_streebog_base_block2_t const* mk_lib_crypto_hash_block_streebog_base_block2_pct;


mk_lang_constexpr mk_lang_jumbo mk_lang_types_void_t mk_lib_crypto_hash_block_streebog_base_block2_set_zero(mk_lib_crypto_hash_block_streebog_base_block2_pt const a) mk_lang_noexcept;
mk_lang_constexpr mk_lang_jumbo mk_lang_types_void_t mk_lib_crypto_hash_block_streebog_base_append_blocks(mk_lib_crypto_hash_block_streebog_base_pt const streebog_base, mk_lib_crypto_hash_block_streebog_base_block_pct const pblocks, mk_lang_types_usize_t const nblocks) mk_lang_noexcept;
mk_lang_constexpr mk_lang_jumbo mk_lang_types_void_t mk_lib_crypto_hash_block_streebog_base_stage_3(mk_lib_crypto_hash_block_streebog_base_pt const streebog_base, mk_lib_crypto_hash_block_streebog_base_block_pt const block, mk_lang_types_sint_t const idx) mk_lang_noexcept;


#if mk_lang_jumbo_want == 1
#include "mk_lib_crypto_hash_block_streebog_base.c"
#endif
#endif
